pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('dckr_pat_YU6_kylKj5FAW1bCLSlTir4Qd9A')
        GIT_REPO_URL = 'https://github.com/Sib07/terminaltask.git'
        DOCKER_IMAGE_NAME = 'my-web-app'
        DOCKER_HUB_USERNAME = 'saba7794'
        DOCKER_HUB_REPO = 'my-web-app'
        DOCKER_HUB_PASSWORD = 'Hala@7890' // URL encoded password
        EMAIL_RECIPIENTS = 'snaz5894@gmail.com'
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    withCredentials([string(credentialsId: '', variable: 'saba7794')]) {
    // some block
}
                }
            
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_IMAGE_NAME} ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                   checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'b4fe048b-564e-4a4f-9506-45aa2d9d9800', url: 'https://github.com/Sib07/terminaltask.git']]) {
                        // Use double quotes for variable substitution
                        bat "docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}"
                        bat "docker tag ${DOCKER_IMAGE_NAME} ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_REPO}:${BUILD_NUMBER}"
                        bat "docker push ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_REPO}:${BUILD_NUMBER}"
                    }
                }
            }
        }
    }

    post {
        success {
            emailext body: "Build passed.\n\n${BUILD_URL}",
                    subject: 'Build Successful',
                    to: EMAIL_RECIPIENTS
        }
        failure {
            emailext body: "Build failed.\n\n${BUILD_URL}",
                    subject: 'Build Failed',
                    to: EMAIL_RECIPIENTS
        }
    }
}
